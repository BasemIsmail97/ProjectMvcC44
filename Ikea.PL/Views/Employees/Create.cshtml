@model IKEA.BLL.DTOS.Employee.CreatedEmployeeDto

@{
    ViewBag.Title = "Create Employee";
}

<div class="row justify-content-center align-content-center mt-3">
    <h1 class="col-8 my-4">Create Employee</h1>

    <form  class="col-8 "method="post" asp-controller="Employees" asp-action="Create">
    
        @Html.AntiForgeryToken()
        
        <div class="row mb-3">
            <div class="col-md-6">
                @Html.LabelFor(model => model.Name)
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
            </div>
            <div class="col-md-6">
                @Html.LabelFor(model => model.Email)
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", type = "email" })
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                @Html.LabelFor(model => model.Address)
                @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
            </div>
            <div class="col-md-6">
                @Html.LabelFor(model => model.PhoneNumber)
                @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control", type = "tel" })
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-3">
                @Html.LabelFor(model => model.Age)
                @Html.TextBoxFor(model => model.Age, new { @class = "form-control", type = "number" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Salary)
                @Html.TextBoxFor(model => model.Salary, new { @class = "form-control", type = "number", step = "0.01" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.HiringDate)
                @Html.TextBoxFor(model => model.HiringDate, new { @class = "form-control", type = "date" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.EmployeeType)
                @Html.DropDownListFor(model => model.EmployeeType, new SelectList(new[] {
                    new { Value = "", Text = "Select Employee Type" },
                    new { Value = "PartTime", Text = "PartTime" },
                    new { Value = "FullTime", Text = "FullTime" }
                }, "Value", "Text"), new { @class = "form-control" })
            </div>
        </div>
       <div class="row mb-3">
    <div class="col-md-6">
        @Html.LabelFor(model => model.CreatedBy)
        @Html.TextBoxFor(model => model.CreatedBy, new { @class = "form-control", type = "number" })
    </div>
    <div class="col-md-6">
        @Html.LabelFor(model => model.LastModificationBy)
        @Html.TextBoxFor(model => model.LastModificationBy, new { @class = "form-control", type = "number" })
    </div>
</div>


        <div class="row mb-3">
            <div class="col-md-6">
                @Html.LabelFor(model => model.Gender)
                <div>
                    @Html.RadioButtonFor(model => model.Gender, "Male") Male
                    @Html.RadioButtonFor(model => model.Gender, "Female", new { @class = "ms-3" }) Female
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-check mt-4">
                    @Html.CheckBoxFor(model => model.IsActive, new { @class = "form-check-input" })
                    @Html.LabelFor(model => model.IsActive, new { @class = "form-check-label" })
                </div>
            </div>
        </div>

        <div class="mt-4 m-auto">
            <input class="btn btn-primary" type="submit" value="Create" />
            <a class="btn btn-outline-dark" asp-controller="Employees" asp-action="index">Back to list</a>
        </div>
    
        </form>
        </div>





       






  